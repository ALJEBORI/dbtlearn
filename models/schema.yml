version: 2

models:
  - name: dim_listings_cleansed
    description: Cleansed table which contains aribnb listings.
    columns:
      - name: listing_id
        description: primary key for listing table
        tests:
          - not_null
          - unique
        data_type: number
      - name: listing_name
        data_type: varchar
        description: The 'listing_name' column represents the name of the listing on Airbnb. It is a string data type and is derived from the 'NAME' column in the 'raw_listings' table in the 'AIRBNB' database.
      - name: room_type
        data_type: varchar
        description: The type of room that is listed for rent. This is a categorical variable with values such as 'Private Room', 'Entire Home/Apt', etc.
      - name: minimum_nights
        description: |-
          Minimum number of nights required to rent this property.
          Keep in mind that old listings might have `minimum_nights` set
          to 0 in the source tables. Our cleansing algorithm updates this to `1`.
        data_type: number
      - name: host_id
        data_type: number
        description: This is a numeric identifier for the host of the listing. It is unique for each host.
      - name: price
        data_type: number
        description: This column represents the price of the listing. It is derived from the 'price_str' column in the raw data, with the '$' symbol removed and the value converted to a decimal format.
      - name: created_at
        data_type: timestamp_ntz
        description: The timestamp when the listing was first created. The data type is timestamp_ntz, which means it's a timestamp without a timezone.
      - name: updated_at
        data_type: timestamp_ntz
        description: This column represents the timestamp when the listing was last updated. The data type is timestamp_ntz, which stands for timestamp with no timezone. This means that the timestamp is stored without any timezone information. It is important to note that the timezone of the timestamp will depend on the timezone setting of the database session.
  - name: host_id
    description: primary key for host table
    tests:
      - not_null
      - relationships:
          to: ref('dim_hosts_cleansed')
          field: host_id
  - name: room_type
    description: type of apartment / room
    tests:
      - accepted_values:
          values: [ 'Entire home/apt', 'Private room', 'Shared room', 'Hotel room' ]
  - name: minimum_nights
    description: '{{ doc("dim_listing_cleansed__minimum_nights") }}'
    tests:
      - positive_value
  - name: dim_hosts_cleansed
    description: Host table for Airbnb hosts
    columns:
      - name: host_id
        description: Primary key of host table
        data_type: number
        data_tests:
          - not_null
          - unique
      - name: host_name
        description: airbnb host name
        data_type: varchar
      - name: is_superhost
        description: 1 for supernight
        data_type: varchar
      - name: created_at
        description: Creation date
        data_type: timestamp_ntz
      - name: updated_at
        description: Update date
        data_type: timestamp_ntz
  - name: dim_listings_w_hosts
    tests:
      - dbt_expectations.expect_table_row_count_to_equal_other_table:
          compare_model: source('airbnb', 'listings')
    columns:
      - name: price
        tests:
          - dbt_expectations.expect_column_values_to_be_of_type:
              column_type: number
          - dbt_expectations.expect_column_quantile_values_to_be_between:
              quantile: 0.99
              min_value: 50
              max_value: 500
          - dbt_expectations.expect_column_max_to_be_between:
              max_value: 5000
              config:
                severity: warn
  - name: fct_reviews
    columns:
      - name: listing_id
        tests:
          - relationships:
              to: ref('dim_listings_cleansed')
              field: listing_id

      - name: reviewer_name
        tests:
          - not_null

      - name: review_sentiment
        tests:
          - accepted_values:
              values: [ 'positive', 'neutral', 'negative' ]
